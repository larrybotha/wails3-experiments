// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Create as $Create } from "@wailsio/runtime";

/**
 * PollResult represents a single poll result
 */
export class PollResult {
    /**
     * Creates a new PollResult instance.
     * @param {Partial<PollResult>} [$$source = {}] - The source object to create the PollResult.
     */
    constructor($$source = {}) {
        if (!("timestamp" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["timestamp"] = "";
        }
        if (!("statusCode" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["statusCode"] = 0;
        }
        if (!("success" in $$source)) {
            /**
             * @member
             * @type {boolean}
             */
            this["success"] = false;
        }
        if (!("error" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["error"] = "";
        }
        if (!("bodyPreview" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["bodyPreview"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new PollResult instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {PollResult}
     */
    static createFrom($$source = {}) {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new PollResult(/** @type {Partial<PollResult>} */($$parsedSource));
    }
}

/**
 * State represents state
 * @readonly
 * @enum {number}
 */
export const State = {
    /**
     * The Go zero value for the underlying type of the enum.
     */
    $zero: 0,

    /**
     * IdleState is idle
     */
    IdleState: 0,

    /**
     * PollingState is polling
     */
    PollingState: 1,
};
