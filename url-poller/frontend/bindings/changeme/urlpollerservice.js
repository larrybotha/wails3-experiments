// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

/**
 * URLPollerService manages URL polling
 * @module
 */

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Call as $Call, CancellablePromise as $CancellablePromise, Create as $Create } from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $models from "./models.js";

/**
 * GetResults returns all poll results
 * @returns {$CancellablePromise<$models.PollResult[]>}
 */
export function GetResults() {
    return $Call.ByID(1503586888).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType1($result);
    }));
}

/**
 * StartPolling starts polling a URL at the specified duration
 * @param {string} url
 * @param {number} durationSeconds
 * @returns {$CancellablePromise<string>}
 */
export function StartPolling(url, durationSeconds) {
    return $Call.ByID(1551161393, url, durationSeconds);
}

/**
 * State returns whether polling is currently active
 * @returns {$CancellablePromise<$models.State>}
 */
export function State() {
    return $Call.ByID(454832203);
}

/**
 * StopPolling stops the current polling operation
 * @returns {$CancellablePromise<string>}
 */
export function StopPolling() {
    return $Call.ByID(4105169849);
}

// Private type creation functions
const $$createType0 = $models.PollResult.createFrom;
const $$createType1 = $Create.Array($$createType0);
